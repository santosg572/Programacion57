ZMQ_CTX_TERM(3)                                     0MQ Manual                                     ZMQ_CTX_TERM(3)

NAME
       zmq_ctx_term - terminate a 0MQ context

SYNOPSIS
       int zmq_ctx_term (void *context);

DESCRIPTION
       The zmq_ctx_term() function shall destroy the 0MQ context context.

       Context termination is performed in the following steps:

        1. Any blocking operations currently in progress on sockets open within context shall return immediately
           with an error code of ETERM. With the exception of zmq_close(), any further operations on sockets open
           within context shall fail with an error code of ETERM.

        2. After interrupting all blocking calls, zmq_ctx_term() shall block until the following conditions are
           satisfied:

           •   All sockets open within context have been closed with zmq_close().

           •   For each socket within context, all messages sent by the application with zmq_send() have either
               been physically transferred to a network peer, or the socket’s linger period set with the
               ZMQ_LINGER socket option has expired.

       For further details regarding socket linger behaviour refer to the ZMQ_LINGER option in zmq_setsockopt(3).

       This function replaces the deprecated functions zmq_term(3) and zmq_ctx_destroy(3).

RETURN VALUE
       The zmq_ctx_term() function shall return zero if successful. Otherwise it shall return -1 and set errno to
       one of the values defined below.

ERRORS
       EFAULT
           The provided context was invalid.

       EINTR
           Termination was interrupted by a signal. It can be restarted if needed.

SEE ALSO
       zmq(7) zmq_init(3) zmq_close(3) zmq_setsockopt(3)

AUTHORS
       This page was written by the 0MQ community. To make a change please read the 0MQ Contribution Policy at
       http://www.zeromq.org/docs:contributing.

0MQ 4.3.5                                           10/09/2023                                     ZMQ_CTX_TERM(3)
